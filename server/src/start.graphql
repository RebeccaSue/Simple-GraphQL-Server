schema
  @core(feature: "https://specs.apollo.dev/core/v0.1"),
{
  query: Query
}

directive @core(feature: String!) repeatable on SCHEMA

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

scalar join__FieldSet

enum join__Graph {
  PRODUCTS @join__graph(name: "products" url: "https://rover.apollo.dev/quickstart/products/graphql")
  REVIEWS @join__graph(name: "reviews" url: "https://rover.apollo.dev/quickstart/reviews/graphql")
}


type Query {
    
    "postsList: contains all of the posts in the server"
    postsList: [Post!]!

    "usersList: contains all of the user information in the server"
    usersList: [User!]!
}
  
type User {

    "id: the unique id of this user, can't be null"
    id: ID!

    "name: the display name, can't be null"
    name: String!

    "joinDate: account registration date, can't be null"
    joinDate: Date!

    "avatar: the url of the profile photo"
    avatar: String

    "pastPosts: an array of the ID of the past posts"
    pastPosts:[ID!]
  }

type Post {

    "id: the unique id of this post, can't be null"
    id: ID!

    "author: the id of the person who posted this, can't be null"
    author: ID!

    "title: the title of this post, can't be null"
    title: String!

    "body: the body of this post"
    body: String

    "date: the time when this post was uploaded" 
    date: Date!
}

type Date {
    year: Int!
    month: Int!
    day: Int!
    hour: Int!
    minute: Int!
    second: Int!
}
